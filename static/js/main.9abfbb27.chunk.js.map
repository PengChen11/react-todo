{"version":3,"sources":["context/auth/context.js","hooks/useForm.js","components/loginModal.js","context/auth/login.js","components/header.js","components/todo/form.js","context/settings.js","components/todo/list.js","components/todo/settingsModal.js","context/auth/auth.js","components/todo/todo.js","app.js","reportWebVitals.js","index.js"],"names":["LoginContext","React","createContext","LoginProvider","props","useState","isLoggedIn","setIsLoggedIn","authenticatedUser","saveAuthenticatedUser","isLoading","setIsLoading","login","userInput","a","config","method","url","process","auth","username","password","axios","response","token","data","validateToken","console","warn","logout","window","alert","signup","userData","useCallback","tokenUser","jwt","verify","cookie","save","e","useEffect","load","Provider","value","children","useForm","submitCallback","values","setValues","handleSubmit","preventDefault","target","reset","handleChange","persist","name","Number","LoginModal","newUserData","loginContext","handleClose","useContext","Modal","show","onHide","onSubmit","Header","closeButton","Title","Body","Form","className","Group","controlId","Label","Control","required","onChange","type","as","Button","variant","onClick","Login","possibleUser","savePossibleUser","showSignUp","setShowSignUp","toggleSignUp","condition","inline","placeholder","Navbar","bg","Brand","href","color","width","TodoForm","disabled","submitBtnStatus","setSubmitBtnStatus","item","assignee","Card","autoComplete","defaultValue","min","max","SettingsContext","Settings","localSettings","JSON","parse","localStorage","getItem","showCompleted","maxNum","sort","sortOrder","settings","setSettings","TodoList","page","setPage","readyList","list","filter","complete","start","end","length","pages","Array","Math","ceil","fill","displayPage","slice","key","order","b","valueA","toLowerCase","valueB","comparison","sortList","error","Alert","map","Toast","onClose","handleDelete","_id","style","maxWidth","capabilities","includes","handleComplete","difficulty","Pagination","n","i","Item","active","SettingsModel","newSettingsData","settingsContext","setItem","stringify","Auth","okToRender","Object","keys","authorized","capability","Todo","setList","setError","showSettings","setShowSettings","headers","Authorization","fetchToDoList","message","id","localRefresh","newList","splice","itemIndex","indexOf","fetchUrl","role","toggleSettings","getToDoList","document","title","Container","Row","Col","lg","md","sm","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9abfbb27.chunk.js","sourcesContent":["import React, {useEffect, useState, useCallback} from 'react';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport jwt from 'jsonwebtoken';\n\nexport const LoginContext = React.createContext();\n\nfunction LoginProvider(props){\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [authenticatedUser, saveAuthenticatedUser] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const signInUrl = process.env.REACT_APP_SIGNIN_URL;\n  const signUpURL = process.env.REACT_APP_SIGNUP_URL;\n  \n\n  const login = async(userInput) =>{\n    setIsLoading(true);\n    //connect to auth server\n    const config = {\n      method: 'post',\n      url: signInUrl,\n      auth: {\n        username: userInput.username,\n        password: userInput.password,\n      },\n    };\n    try {\n      const response = await axios(config);\n      const {token} = response.data;\n      validateToken(token);\n      setIsLoading(false);\n    }catch(e){\n      console.warn('Login Attempt Failed');\n      logout();\n      window.alert('login failed. Please try again');\n      setIsLoading(false);\n    }\n  };\n\n  const signup = async (userData) =>{\n    setIsLoading(true);\n    const config = {\n      method:'post',\n      url: signUpURL,\n      data: userData,\n    };\n    \n    try {\n      const response = await axios(config);\n      const {token} = response.data;\n      validateToken(token);\n      setIsLoading(false);\n    }catch(e){\n      console.warn('Register Attempt Failed');\n      logout();\n      window.alert('Register process failed. Please try again');\n      setIsLoading(false);\n    }\n\n  };\n\n  const logout = () =>{\n    setIsLoggedIn(false);\n    saveAuthenticatedUser({});\n  };\n\n\n  const validateToken = useCallback((token)=>{\n\n    try {\n      let tokenUser = jwt.verify(token, process.env.REACT_APP_SECRET);\n\n      setIsLoggedIn(true);\n      saveAuthenticatedUser({...tokenUser, token});\n      \n      cookie.save('auth', token);\n      \n    } catch (e){\n      logout();\n      console.warn('user token error');\n      window.alert('Something is wrong with user authentication. Please try to login again');\n    }\n  },[]);\n\n\n  useEffect(()=>{\n    const token = cookie.load('auth') || null;\n    if (token) validateToken(token);\n  },[validateToken]);\n\n\n\n  return(\n    <LoginContext.Provider value={{ isLoggedIn, authenticatedUser, login, logout, signup, isLoading}}>\n      {props.children}\n    </LoginContext.Provider>\n  );\n}\n\nimport PropTypes from 'prop-types';\nLoginProvider.propTypes = {\n  children: PropTypes.array,\n};\n\nexport default LoginProvider;","import {useState} from 'react';\n\nexport default function useForm(submitCallback, inputCallback=null){\n  const [values, setValues] = useState({});\n\n  function handleSubmit (e) {\n    e.preventDefault();\n    e.target.reset();\n    submitCallback && submitCallback(values);\n    setValues({});\n  }\n\n  function handleChange (e){\n    e.persist();\n\n    if (e.target.name === 'maxNum' || e.target.name === 'difficulty') {\n      setValues({...values,[e.target.name]: Number(e.target.value)});\n      return;\n    }\n\n    if (e.target.name === 'showCompleted') {\n\n      setValues({...values,[e.target.name]: e.target.value==='yes'? true:false});\n      return;\n    }\n    \n    setValues({...values,[e.target.name]: e.target.value});\n  }\n\n  return [handleSubmit, handleChange, values];\n}","import React, {useContext} from 'react';\nimport {Modal, Button, Form} from 'react-bootstrap'; \nimport PropTypes from 'prop-types';\nimport useForm from '../hooks/useForm.js';\nimport {LoginContext} from '../context/auth/context.js';\n\nexport default function LoginModal (props){\n\n  const [handleSubmit, handleChange] = useForm(registerUser);\n\n  const loginContext = useContext(LoginContext);\n\n  function registerUser (newUserData){\n\n    loginContext.signup(newUserData);\n\n    props.handleClose();\n  }\n\n  return (\n\n    <Modal show={props.show} onHide={props.handleClose} onSubmit={handleSubmit}>\n\n      <Modal.Header closeButton>\n        <Modal.Title>Welcome to To Do Manager! </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>Please input the following info to register as new user.</p>\n        <Form className = 'font-weight-bold'>\n\n          <Form.Group controlId='username'>\n            <Form.Label className='mr-3'>Username</Form.Label>\n            <Form.Control\n              required\n              name='username'\n              onChange = {handleChange}\n            >\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              type='password'\n              onChange = {handleChange}\n            >\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              required\n              name='email'\n              type='email'\n              onChange = {handleChange}\n            >\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='role'>\n            <Form.Label className='mr-3'>What&apos;s your role?</Form.Label>\n            <Form.Control\n              required\n              name='role'\n              as='select'\n              onChange = {handleChange}\n            >\n              \n              <option value=\"\">...</option>\n              <option value=\"user\">User</option>\n              <option value=\"editor\">Editor</option>\n              <option value=\"admin\">Admin</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Button variant=\"primary\" type='submit' className='float-right'>\n          Register!\n          </Button>\n          <Button variant=\"secondary\" onClick={props.handleClose}>\n            Cancel\n          </Button>\n        </Form>\n      </Modal.Body>\n\n    </Modal>\n  );\n}\n\nLoginModal.propTypes = {\n  show: PropTypes.bool,\n  handleClose: PropTypes.func,\n  handleSubmit: PropTypes.func,\n};","import React, {useState, useContext} from 'react';\nimport {If, Then, Else} from 'react-if';\nimport {Form, Button} from 'react-bootstrap';\nimport {LoginContext} from './context.js';\nimport LoginModal from '../../components/loginModal.js';\n\n\nexport default function Login(){\n\n  const [possibleUser, savePossibleUser] = useState({});\n  const [showSignUp, setShowSignUp] = useState(false);\n  const loginContext = useContext(LoginContext);\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    loginContext.login(possibleUser);\n    e.target.reset();\n    // call the login() method in context\n  };\n\n  const handleChange = (e) =>{\n    savePossibleUser({...possibleUser, [e.target.name]:e.target.value});\n  };\n\n  const toggleSignUp = () =>{\n    setShowSignUp(!showSignUp);\n  };\n\n\n  return (\n    <If condition={loginContext.isLoggedIn}>\n      <Then>\n        <h4>{loginContext.authenticatedUser\n          ? `Welcome Back, ${loginContext.authenticatedUser.username}`: 'hi'}</h4>\n        <Button\n          variant=\"dark\"\n          onClick={loginContext.logout}\n        >Sign Out</Button>\n      </Then>\n      <Else>\n        <Form inline onSubmit={handleSubmit}>\n          <Form.Control\n            required\n            name='username'\n            type='text'\n            placeholder='username'\n            onChange={handleChange}\n            className='m-3'\n          >  \n          </Form.Control>\n\n          <Form.Control\n            required\n            name='password'\n            type='password'\n            placeholder='password'\n            onChange={handleChange}\n            className='m-3'\n          >  \n          </Form.Control>\n\n          <Button variant=\"dark\" type=\"submit\" className='m-3'>Sign In</Button>\n          <Button variant=\"dark\"  className='m-3' onClick={toggleSignUp}>Sign up</Button>\n        </Form>\n        <LoginModal show={showSignUp} handleClose={toggleSignUp}></LoginModal>\n\n      </Else>\n    </If>\n\n  );\n}","import React, {useContext} from 'react';\nimport {Navbar} from 'react-bootstrap';\nimport Login from '../context/auth/login.js';\nimport ReactLoading from 'react-loading';\nimport {LoginContext} from '../context/auth/context.js';\nimport {When} from 'react-if';\n\nexport default function Header (){\n  const {isLoading} = useContext(LoginContext);\n\n  return(\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\" className=\"justify-content-between\">\n        <Navbar.Brand href=\"#home\" className=\"d-inline\">Home</Navbar.Brand>\n        <Login />\n      </Navbar>\n      <When condition = {isLoading}>\n        <ReactLoading type={'bars'} color={'grey'} width={150} className='m-auto' />\n      </When>\n    </>\n  );\n}","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {Form, Button, Card} from 'react-bootstrap';\nimport useForm from '../../hooks/useForm';\n\nexport default function TodoForm (props){\n\n  const [handleSubmit, handleChange, values] = useForm(props.handleSubmit);\n  const [submitBtnStatus, setSubmitBtnStatus] = useState({disabled:true});\n\n  useEffect(()=>{\n    if (values.item && values.assignee){\n      setSubmitBtnStatus({disabled: false});\n    } else {\n      setSubmitBtnStatus({disabled: true});\n    }\n  },[values]);\n  \n  return (\n    <>\n      <Form onSubmit={handleSubmit} >\n        <Card>\n          <Card.Body>\n            <Card.Title>Add To Do Item</Card.Title>\n\n            <Form.Group controlId=\"item\">\n              <Form.Label>To Do Item</Form.Label>\n              <Form.Control \n                required\n                autoComplete=\"off\"\n                name=\"item\"\n                type=\"text\"\n                placeholder=\"Item Details\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"assignee\">\n              <Form.Label>Assigned To</Form.Label>\n              <Form.Control \n                required\n                autoComplete=\"off\"\n                name=\"assignee\"\n                type=\"text\"\n                placeholder=\"Assignee Name\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n            \n            <Form.Group controlId=\"difficulty\">\n              <Form.Label>Difficulty Rating</Form.Label>\n              <Form.Control \n                required\n                defaultValue=\"1\"\n                type=\"range\"\n                min=\"1\"\n                max=\"5\"\n                name=\"difficulty\"\n                placeholder=\"Assignee Name\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\" disabled={submitBtnStatus.disabled} >Add Item</Button>\n          </Card.Body>\n        </Card>\n      </Form>\n    </>\n  );\n}\nTodoForm.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n","import React, {useState} from 'react';\n\nexport const SettingsContext = React.createContext();\n\nfunction Settings(props){\n  const initSettings = {\n    showCompleted: false,\n    maxNum: 5,\n    sort: 'difficulty',\n    sortOrder: 'ascending',\n  };\n\n  const localSettings = JSON.parse(localStorage.getItem('ToDoManagerSettingsData'));\n\n  const [settings, setSettings] = useState(localSettings ||initSettings);\n\n  return (\n    <SettingsContext.Provider value = {{settings, setSettings}}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n\n}\n\nimport PropTypes from 'prop-types';\nSettings.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Settings;\n","import React, {useState, useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport {Alert, Toast, Pagination} from 'react-bootstrap';\nimport {If, Then, Else} from 'react-if';\nimport {SettingsContext} from '../../context/settings.js';\nimport {LoginContext} from '../../context/auth/context.js';\n\n\nexport default function TodoList (props){\n  \n  const settingsContext = useContext(SettingsContext);\n  const {showCompleted, maxNum, sort, sortOrder} = settingsContext.settings;\n  // just tracking the page number, when changes, re-render content\n  const [page, setPage] = useState(0);\n  //this is the modified list based on user's setting about whether to show completed items or not. This is the only thing that modifys the items in the list\n  const readyList = props.list.filter(item => showCompleted? true : !item.complete);\n  \n  //determin the starting and ending point for each page\n  const start = maxNum * page || 0;\n  const end = start + maxNum || readyList.length;\n  // init a pages array for later use with Pagination, will contains page numbers\n  const pages = new Array(Math.ceil(readyList.length / maxNum)).fill('');\n  // this will be the page of items to be displayed.\n  const displayPage = readyList ? readyList.slice(start, end) : [];\n  displayPage.sort(sortList(sort, sortOrder));\n\n  const {authenticatedUser} = useContext(LoginContext);\n\n\n  /**\n   * \n   * @param {string} key The key you want to sort with\n   * @param {string} order apple in ascending or decending order\n   */\n  function sortList(key, order='ascending'){\n    return function innerSort(a,b){\n      if (!a[key] || !b[key]){\n        return 0;\n      }\n\n      const valueA = (typeof a[key]==='string') ? a[key].toLowerCase() : a[key];\n      const valueB = (typeof b[key]==='string') ? b[key].toLowerCase() : b[key];\n\n      let comparison = 0;\n      if (valueA > valueB) comparison = 1;\n      else if (valueA < valueB) comparison = -1;\n\n      return order === 'descending' ? comparison*-1 : comparison;\n    };\n  }\n\n  return (\n    <>\n      <If condition={props.error}>\n        <Then>\n          <Alert className = 'bg-danger'>\n            <h2>\n              {props.error}\n            </h2>\n          </Alert>\n        </Then>\n        <Else>\n          {displayPage.map(item => (\n            <Toast key={item._id} onClose={() => props.handleDelete(item._id)} style={{width: '100%',maxWidth: '100%'}} >\n              <Toast.Header closeButton={authenticatedUser.capabilities.includes('delete')}>\n                <strong \n                  className={`${item.complete? 'bg-success':'bg-danger'} rounded mr-2 text-white p-1`} \n                  onClick={authenticatedUser.capabilities.includes('update')?\n                    () => props.handleComplete(item._id): null}>\n                  {item.complete? 'Completed' : 'Pending'}\n                </strong>\n                <span className=\"ml-auto mr-auto h6\">{item.assignee}</span>\n              </Toast.Header>\n              <Toast.Body>\n                <span className='mr-auto h5'>{item.item}</span>\n                <small className='float-right'>{`Difficulty: ${item.difficulty}`}</small>\n              </Toast.Body>\n            </Toast>\n          ))}\n          <Pagination>\n            {\n              pages.map( (n, i)=>\n                <Pagination.Item\n                  key = {i+1}\n                  active = {i === page}\n                  onClick={()=>setPage(i)}\n                >{i+1}</Pagination.Item>\n              )\n            }\n          </Pagination>\n        </Else>\n      </If>\n    </>\n  );\n}\n\nTodoList.propTypes = {\n  handleComplete: PropTypes.func,\n  list: PropTypes.array,\n  error: PropTypes.string,\n  handleDelete: PropTypes.func,\n  isLoading: PropTypes.bool,\n};\n","import React, {useContext} from 'react';\nimport {Modal, Button, Form} from 'react-bootstrap'; \nimport PropTypes from 'prop-types';\nimport useForm from '../../hooks/useForm';\nimport {SettingsContext} from '../../context/settings.js';\n\n\nfunction SettingsModel (props){\n  \n  const [handleSubmit, handleChange] = useForm(changeSettings);\n\n  const settingsContext = useContext(SettingsContext);\n\n  function changeSettings (newSettingsData){\n\n    settingsContext.setSettings(newSettingsData);\n\n    localStorage.setItem('ToDoManagerSettingsData', JSON.stringify(newSettingsData));\n\n    props.handleClose();\n  }\n\n  return (\n\n    <Modal show={props.show} onHide={props.handleClose} onSubmit={handleSubmit}>\n\n      <Modal.Header closeButton>\n        <Modal.Title>Settings</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form className = 'font-weight-bold'>\n\n          <Form.Group controlId='showCompleted'>\n            <Form.Label className='mr-3'>Show completed items?</Form.Label>\n            <Form.Control\n              required\n              name='showCompleted'\n              as='select'\n              onChange = {handleChange}\n            >\n              <option value=\"\">...</option>\n              <option value=\"no\">No</option>\n              <option value=\"yes\">Yes</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='maxNum'>\n            <Form.Label>How many items do you want to display per page?</Form.Label>\n            <Form.Control\n              required\n              as=\"select\"\n              name='maxNum'\n              type='text'\n              onChange = {handleChange}\n            >\n              <option value=\"\">...</option>\n              <option value=\"5\">5 items</option>\n              <option value=\"6\">6 items</option>\n              <option value=\"7\">7 items</option>\n              <option value=\"8\">8 items</option>\n              <option value=\"9\">9 items</option>\n              <option value=\"10\">10 items</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='sort'>\n            <Form.Label>How do you want to sort your to do items?</Form.Label>\n            <Form.Control\n              required\n              as=\"select\"\n              name='sort'\n              type='text'\n              onChange = {handleChange}\n            >\n              <option value=\"\">...</option>\n              <option value=\"difficulty\">By difficulty ratings</option>\n              <option value=\"item\">By item info</option>\n              <option value=\"assignee\">By assignee name</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='sortOrder'>\n            <Form.Label className='mr-3'>Sorting order?</Form.Label>\n            <Form.Control\n              required\n              name='sortOrder'\n              as='select'\n              onChange = {handleChange}\n            >\n              \n              <option value=\"\">...</option>\n              <option value=\"ascending\">Ascending</option>\n              <option value=\"descending\">Descending</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Button variant=\"primary\" type='submit' className='float-right'>\n          Save Changes\n          </Button>\n          <Button variant=\"secondary\" onClick={props.handleClose}>\n            Cancel\n          </Button>\n        </Form>\n      </Modal.Body>\n\n    </Modal>\n  );\n}\n\n\nSettingsModel.propTypes = {\n  show: PropTypes.bool,\n  handleClose: PropTypes.func,\n  handleSubmit: PropTypes.func,\n};\n\nexport default SettingsModel;","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport {LoginContext} from './context.js';\n\nimport {When} from 'react-if';\n\nexport default function Auth(props){\n\n  const {authenticatedUser, isLoggedIn} = useContext(LoginContext);\n\n  let okToRender = false;\n\n  try {\n    if (Object.keys(authenticatedUser).length !== 0 ){\n\n      let  authorized= props.capability\n        ? authenticatedUser.capabilities.includes(props.capability) : true;\n  \n      okToRender = isLoggedIn && authorized;\n    }\n  } catch (e){\n    console.warn('Not Authorized');\n  }\n\n  return (\n    <When condition={okToRender}>\n      {props.children}\n    </When>\n  );\n}\n\nAuth.propTypes = {\n  children: PropTypes.object,\n  capability: PropTypes.string,\n};\n","import React, {useState, useEffect, useContext, useCallback} from 'react';\nimport TodoForm from './form';\nimport TodoList from './list';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\n// import useAjax from './hooks/useAjax';\nimport axios from 'axios';\nimport SettingsModal from './settingsModal.js';\nimport {LoginContext} from '../../context/auth/context.js';\nimport Auth from '../../context/auth/auth.js';\nimport {If, Then, Else} from 'react-if';\nimport ReactLoading from 'react-loading';\n\nexport default function Todo (){\n\n  // const [setConfig, response, error] = useAjax();\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const {authenticatedUser} = useContext(LoginContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const url = process.env.REACT_APP_TODO_URL;\n  /**\n   * \n   * @param {obj} item take an obj and save to database\n   */\n  async function addItem (item) {\n    const config = {\n      method: 'post',\n      url,\n      data: {\n        ...item,\n        complete:false,\n      },\n      headers: {\n        Authorization: `Bearer ${authenticatedUser.token}`,\n      },\n    };\n    if (!config.data.difficulty) {\n      config.data.difficulty=1;\n    }\n    try {\n      await axios(config);\n      await fetchToDoList();\n      setError(null);\n    }\n    catch (error){\n      setError(error.message);\n    }\n  }\n\n  /**\n   * \n   * @param {string} id update the givin itme's complete status in database\n   */\n  async function toggleComplete (id) {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    const config = {\n      method: 'put',\n      url: `${url}/${id}`,\n      data: {\n        ...item,\n        complete:!item.complete,\n      },\n      headers: {\n        Authorization: `Bearer ${authenticatedUser.token}`,\n      },\n    };\n    try {\n      await axios(config);\n      localRefresh();\n      setError(null);\n    }\n    catch (error){\n      setError(error.message);\n    }\n    \n    function localRefresh(){\n      item.complete = !item.complete;\n      let newList = [...list];\n      setList(newList);\n    }\n  }\n\n  /**\n   * \n   * @param {string} id delete the givin itme from database\n   */\n  async function deleteItem(id){\n    let item = list.filter(i => i._id === id)[0] || {};\n    const itemIndex = list.indexOf(item);\n\n    const config = {\n      method: 'delete',\n      url: `${url}/${id}`,\n      headers: {\n        Authorization: `Bearer ${authenticatedUser.token}`,\n      },\n    };\n    try {\n      await axios(config);\n      localRefresh();\n      setError(null);\n    }\n    catch (error){\n      setError(error.message);\n    }\n    function localRefresh(){\n      list.splice(itemIndex,1);\n      let newList = [...list];\n      setList(newList);\n    }\n  }\n\n  \n  const fetchToDoList = useCallback(async ()=>{\n    let fetchUrl;\n    setIsLoading(true);\n    if (authenticatedUser.role === 'user'){\n      fetchUrl = url+`/assignee/${authenticatedUser.username}`;\n    } else fetchUrl = url;\n    const config = {\n      method: 'get',\n      url: fetchUrl,\n      headers: {\n        Authorization: `Bearer ${authenticatedUser.token}`,\n      },\n    };\n    try{\n      const {data} = await axios(config);\n      setList(data);\n      setError(null);\n      setIsLoading(false);\n    }\n    catch (error){\n      setError(error.message);\n      setIsLoading(false);\n      console.warn('Error hit when fetching the lists');\n    }\n  },[authenticatedUser, url]);\n\n  // Runs on app load, modifying items, and change settings. Pulls all the list items from data server\n  useEffect( () => {\n    const getToDoList =  async () => {\n      if (Object.keys(authenticatedUser).length !== 0 ) await fetchToDoList();\n    };\n    getToDoList();\n  }, [fetchToDoList, authenticatedUser]);\n  \n\n  // update title\n  useEffect(()=>{\n    document.title = `To Do List: ${list.filter(item => !item.complete).length}`;\n  });\n\n\n  // function to toggle settings modal \n  function toggleSettings(){\n    setShowSettings(!showSettings);\n  }\n\n  return (\n    <>\n      <Container className = 'p-3'>\n        <h2 className = 'text-white bg-dark mt-3 p-3'>\n        To Do List Manager ({list.filter(item => !item.complete).length})\n          <Button className='float-right' variant=\"primary\" onClick={toggleSettings}>Settings</Button>\n        </h2>\n        <SettingsModal show={showSettings} handleClose={toggleSettings} ></SettingsModal>\n        <Row className='font-weight-bold'>\n          <Auth capability={'create'}>\n            <Col lg={4} md={6} sm={12} className = 'p-3'>\n              <TodoForm handleSubmit={addItem} />\n            </Col>\n          </Auth>\n          <Col className = 'p-3'>\n            <If condition={isLoading}>\n              <Then>\n                <ReactLoading type={'bars'} color={'grey'} width={150} className='m-auto' />\n              </Then>\n              <Else>\n                <TodoList\n                  list={list}\n                  handleComplete={toggleComplete}\n                  handleDelete={deleteItem}\n                  error={error}\n                />\n              </Else>\n            </If>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n","import React from 'react';\nimport Header from './components/header.js';\nimport Todo from './components/todo/todo.js';\nimport LoginContext from './context/auth/context.js';\nimport Auth from './context/auth/auth.js';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nexport default function App (){\n\n  return(\n    <LoginContext>\n      <Header/>\n      <Auth>\n        <Todo/>\n      </Auth>\n    </LoginContext>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.js';\nimport reportWebVitals from './reportWebVitals.js';\nimport SettingsContext from './context/settings.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SettingsContext>\n      <App />\n    </SettingsContext>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}